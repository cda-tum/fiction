name: üêç ‚Ä¢ CI

on:
  push:
    branches: ["main"]
    paths:
      - "bindings/pyfiction/**"
      - "**/*.py"
      - "**/*.hpp"
      - "**/*.cpp"
      - "**/*.cmake"
      - "**/CMakeLists.txt"
      - "libs/**"
      - ".github/workflows/python-bindings.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "bindings/pyfiction/**"
      - "**/*.py"
      - "**/*.hpp"
      - "**/*.cpp"
      - "**/*.cmake"
      - "**/CMakeLists.txt"
      - "libs/**"
      - ".github/workflows/python-bindings.yml"
  workflow_run:
    workflows: ["pyfiction Docstring Generator"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  Z3_VERSION: 4.13.0

jobs:
  python-tests:
    name: üêç ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-13, macos-15, windows-latest]
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "${{matrix.runs-on}}-pyfiction"
          save: true
          max-size: 10G

      - if: runner.os == 'Linux'
        name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Setup Z3 Solver
        id: z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{env.Z3_VERSION}}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true

      - name: Setup nox
        uses: wntrblm/nox@2024.10.09

      - name: üêç Test
        run: nox -s tests --verbose
