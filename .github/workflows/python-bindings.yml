name: üêç ‚Ä¢ CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - 'bindings/pyfiction/**'
      - '**/*.py'
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/python-bindings.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'bindings/pyfiction/**'
      - '**/*.py'
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/python-bindings.yml'
  workflow_run:
    workflows: [ "pyfiction Docstring Generator" ]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  Z3_VERSION: 4.13.0
  ENABLE_Z3: 'ON'

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-2019 ]
        python_version: [ '3.8.x', '3.13.x' ]
        include:
          - os: ubuntu-22.04
            z3_platform: linux
            architecture: x64
            toolset: v142
          - os: macos-14
            z3_platform: macOS
            architecture: arm64
          - os: windows-2019
            z3_platform: windows
            architecture: x64

    name: üêç on ${{matrix.os}} with Python ${{matrix.python_version}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-pyfiction'
          variant: ccache
          save: true
          max-size: 10G

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python_version}}
          cache: 'pip'

      - if: runner.os == 'Linux'
        name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Setup Z3 Solver
        id: z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{env.Z3_VERSION}}
          platform: ${{matrix.z3_platform}}
          architecture: ${{matrix.architecture}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build pyfiction
        working-directory: ${{github.workspace}}
        run: z3=${{env.ENABLE_Z3}} pip install '.[test]'

      - name: Test
        working-directory: ${{github.workspace}}
        run: python -m unittest discover --verbose
