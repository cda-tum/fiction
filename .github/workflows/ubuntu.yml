name: 🐧 • CI

on:
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
      - '!bindings/pyfiction/include/pyfiction/pybind11_mkdoc_docstrings.hpp'
  pull_request:
    branches: [ 'main' ]
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
      - '!bindings/pyfiction/include/pyfiction/pybind11_mkdoc_docstrings.hpp'
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  Z3_VERSION: 4.13.0

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-24.04 ]
        compiler: [ g++-11, g++-12, g++-13, clang++-14, clang++-15, clang++-16 ]
        exclude:
          - os: ubuntu-22.04
            compiler: g++-13
          - os: ubuntu-22.04
            compiler: clang++-16
          - os: ubuntu-24.04
            compiler: clang++-14
        include:
          - os: ubuntu-22.04
            compiler: g++-10
          - os: ubuntu-24.04
            compiler: g++-14
          - os: ubuntu-24.04
            compiler: clang++-17
          - os: ubuntu-24.04
            compiler: clang++-18
          - os: ubuntu-20.04
            compiler: g++-10
            cppstandard: -DCMAKE_CXX_STANDARD=20
            cppname: C++20

    name: 🐧 ${{matrix.os}} with ${{matrix.compiler}} ${{matrix.cppname}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Install libraries and the respective compiler
        run: sudo apt-get update && sudo apt-get install -yq libtbb-dev ${{matrix.compiler}}

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: '${{matrix.os}}-${{matrix.compiler}}'
          variant: ccache
          save: true
          max-size: 10G

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.x'
          cache: 'pip'

      - name: Install pip packages
        uses: BSFishy/pip-action@v1
        with:
          requirements: ${{github.workspace}}/libs/mugen/requirements.txt

      - name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Setup Z3 Solver
        id: z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{env.Z3_VERSION}}
          platform: linux
          architecture: x64
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}


      # Build and test pipeline for Debug mode

      - name: Create Build Environment (Debug)
        run: cmake -E make_directory ${{github.workspace}}/build_debug

      - name: Configure CMake (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: >
          cmake ${{github.workspace}} ${{matrix.cppstandard}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=Debug
          -DFICTION_ENABLE_UNITY_BUILD=ON
          -DFICTION_ENABLE_PCH=ON
          -DFICTION_CLI=ON
          -DFICTION_TEST=ON
          -DFICTION_BENCHMARK=OFF
          -DFICTION_EXPERIMENTS=ON
          -DFICTION_Z3=ON
          -DFICTION_ENABLE_MUGEN=ON
          -DFICTION_PROGRESS_BARS=OFF
          -DFICTION_WARNINGS_AS_ERRORS=OFF
          -DMOCKTURTLE_EXAMPLES=OFF

      - name: Build (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: cmake --build . --config Debug -j4

      - name: Test (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: ctest -C Debug --verbose --output-on-failure --repeat until-pass:3 --parallel 4 --exclude-regex "quality"


      # Build and test pipeline for Release mode

      - name: Create Build Environment (Release)
        run: cmake -E make_directory ${{github.workspace}}/build_release

      - name: Configure CMake (Release)
        working-directory: ${{github.workspace}}/build_release
        run: >
          cmake ${{github.workspace}} ${{matrix.cppstandard}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=Release
          -DFICTION_ENABLE_UNITY_BUILD=ON
          -DFICTION_ENABLE_PCH=ON
          -DFICTION_CLI=ON
          -DFICTION_TEST=ON
          -DFICTION_BENCHMARK=OFF
          -DFICTION_EXPERIMENTS=ON
          -DFICTION_Z3=ON
          -DFICTION_ENABLE_MUGEN=ON
          -DFICTION_PROGRESS_BARS=OFF
          -DFICTION_WARNINGS_AS_ERRORS=OFF
          -DMOCKTURTLE_EXAMPLES=OFF

      - name: Build (Release)
        working-directory: ${{github.workspace}}/build_release
        run: cmake --build . --config Release -j4

      - name: Test (Release)
        working-directory: ${{github.workspace}}/build_release
        run: ctest -C Release --verbose --output-on-failure --repeat until-pass:3 --parallel 4
